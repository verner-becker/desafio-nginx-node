version: '3'

services: 

  app:
    image: vernerb/node-fullcycle:latest
    #build: 
    #  context: node
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 30s npm start
    #npm start
    #dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    networks: 
      - full-cycle-network
    #volumes: 
    #  - ./node:/usr/src/app
    tty: true
    #ports: 
    #  - "3000:3000"
    depends_on: 
       - db

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ##command: --init-file /var/lib/mysql/init.sql
    volumes: 
      - ./mysql:/var/lib/mysql
    entrypoint:
      sh -c "
         echo 'CREATE DATABASE IF NOT EXISTS nodedb;USE nodedb;CREATE TABLE IF NOT EXISTS people(id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(255))ENGINE=INNODB;' > /docker-entrypoint-initdb.d/init.sql;
         /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
            
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks: 
      - full-cycle-network

  nginx:
    image: vernerb/nginx-fullcycle:latest
    container_name: nginx
    networks: 
      - full-cycle-network
    ports: 
      - "8080:80"
    restart: always
    entrypoint: dockerize -wait tcp://app:3000 timeout 50s nginx -g 'daemon off;'
    depends_on: 
       - app

networks: 
  full-cycle-network:
    driver: bridge